{
	"scopeName": "scope.terraform",
	"fileTypes": [
		"tf",
		"tfvars",
		"hcl"
	],
	"name": "Terraform",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#expressions"
		}
	],
	"repository": {
		"identifer": {
			"match": "\\b(?!null|false|true)[[:alpha:]][[:alnum:]_-]*\\b"
		},
		"exponent": {
			"match": "([Ee][+-]?)"
		},
		"char_escapes": {
			"match": "\\\\[nrt\"\\\\]|\\\\u(\\h{8}|\\h{4})",
			"comment": "Character Escapes",
			"name": "constant.character.escape.terraform"
		},
		"terraform_known_blocks": {
			"match": "resource|provider|variable|output|locals|module|data|terraform"
		},
		"terraform_type_keywords": {
			"match": "any|string|number|bool",
			"name": "storage.type.terraform",
			"comment": "Type keywords known to Terraform."
		},
		"predeclared_funcs": {
			"match": "abs|ceil|floor|log|max|min|pow|signum|chomp|format|formatlist|indent|join|lower|regex|regexall|replace|split|strrev|substr|title|trimspace|upper|chunklist|coalesce|coalescelist|compact|concat|contains|distinct|element|flatten|index|keys|length|list|lookup|map|matchkeys|merge|range|reverse|setintersection|setproduct|setunion|slice|sort|transpose|values|zipmap|base64decode|base64encode|base64gzip|csvdecode|jsondecode|jsonencode|urlencode|yamldecode|yamlencode|abspath|dirname|pathexpand|basename|file|fileexists|fileset|filebase64|templatefile|formatdate|timeadd|timestamp|base64sha256|base64sha512|bcrypt|filebase64sha256|filebase64sha512|filemd5|filemd1|filesha256|filesha512|md5|rsadecrypt|sha1|sha256|sha512|uuid|uuidv5|cidrhost|cidrnetmask|cidrsubnet|tobool|tolist|tomap|tonumber|toset|tostring"
		},
		"comments": {
			"patterns": [
				{
					"include": "#inline_comments"
				},
				{
					"include": "#block_comments"
				}
			]
		},
		"inline_comments": {
			"begin": "#|//",
			"comment": "Inline Comments",
			"name": "comment.line.terraform",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.terraform"
				}
			},
			"end": "$\\n?"
		},
		"block_comments": {
			"begin": "/\\*",
			"comment": "Block comments",
			"name": "comment.block.terraform",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.terraform"
				}
			},
			"end": "\\*/"
		},
		"expressions": {
			"patterns": [
				{
					"include": "#literal_values"
				},
				{
					"include": "#operators"
				},
				{
					"include": "#brackets"
				},
				{
					"include": "#objects"
				},
				{
					"include": "#attribute_access"
				},
				{
					"include": "#functions"
				},
				{
					"include": "#parens"
				}
			]
		},
		"literal_values": {
			"patterns": [
				{
					"include": "#numeric_literals"
				},
				{
					"include": "#language_constants"
				},
				{
					"include": "#string_literals"
				},
				{
					"include": "#heredoc"
				},
				{
					"include": "#type_keywords"
				},
				{
					"include": "#named_value_references"
				}
			]
		},
		"language_constants": {
			"match": "\\b(true|false|null)\\b",
			"comment": "Language Constants",
			"name": "constant.language.terraform"
		},
		"numeric_literals": {
			"patterns": [
				{
					"match": "\\b\\d+([Ee][+-]?)\\d+\\b",
					"comment": "Integer, no fraction, optional exponent",
					"name": "constant.numeric.float.terraform",
					"captures": {
						"1": {
							"name": "punctuation.separator.exponent.terraform"
						}
					}
				},
				{
					"match": "\\b\\d+(\\.)\\d+(?:([Ee][+-]?)\\d+)?\\b",
					"comment": "Integer, fraction, optional exponent",
					"name": "constant.numeric.float.terraform",
					"captures": {
						"1": {
							"name": "punctuation.separator.decimal.terraform"
						},
						"2": {
							"name": "punctuation.separator.exponent.terraform"
						}
					}
				},
				{
					"match": "\\b\\d+\\b",
					"comment": "Integers",
					"name": "constant.numeric.integer.terraform"
				}
			]
		},
		"string_literals": {
			"patterns": [
				{
					"begin": "\"",
					"comment": "Strings",
					"name": "string.quoted.double.terraform",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.terraform"
						}
					},
					"patterns": [
						{
							"include": "#string_interpolation"
						},
						{
							"include": "#char_escapes"
						}
					],
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.terraform"
						}
					}
				}
			]
		},
		"string_interpolation": {
			"begin": "(\\$|\\%)\\{",
			"comment": "String interpolation",
			"name": "meta.interpolation.terraform",
			"beginCaptures": {
				"0": {
					"name": "keyword.other.interpolation.begin.terraform"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "keyword.other.interpolation.end.terraform"
				}
			},
			"patterns": [
				{
					"match": "\\~\\s",
					"comment": "Trim left whitespace",
					"name": "keyword.operator.template.left.trim.terraform"
				},
				{
					"match": "\\s\\~",
					"comment": "Trim right whitespace",
					"name": "keyword.operator.template.right.trim.terraform"
				},
				{
					"match": "\\b(if|else|endif|for|in|endfor)\\b",
					"comment": "if/else/endif and for/in/endfor directives",
					"name": "keyword.control.terraform"
				},
				{
					"include": "#expressions"
				}
			]
		},
		"heredoc": {
			"begin": "(\\<\\<\\-?)\\s*(\\w+)\\s*$",
			"comment": "String Heredoc",
			"name": "string.unquoted.heredoc.terraform",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.heredoc.terraform"
				},
				"2": {
					"name": "keyword.control.heredoc.terraform"
				}
			},
			"patterns": [
				{
					"include": "#string_interpolation"
				}
			],
			"end": "^\\s*\\2\\s*$",
			"endCaptures": {
				"0": {
					"comment": "The heredoc token identifier (second capture above).",
					"name": "keyword.control.heredoc.terraform"
				}
			}
		},
		"type_keywords": {
			"patterns": [
				{
					"include": "#terraform_type_keywords"
				}
			]
		},
		"named_value_references": {
			"match": "\\b(var|local|module|data|path|terraform)\\b",
			"comment": "Constant values available only to Terraform.",
			"name": "support.constant.terraform"
		},
		"operators": {
			"patterns": [
				{
					"match": "\\>\\=",
					"name": "keyword.operator.terraform"
				},
				{
					"match": "\\<\\=",
					"name": "keyword.operator.terraform"
				},
				{
					"match": "\\=\\=",
					"name": "keyword.operator.terraform"
				},
				{
					"match": "\\!\\=",
					"name": "keyword.operator.terraform"
				},
				{
					"match": "\\+",
					"name": "keyword.operator.arithmetic.terraform"
				},
				{
					"match": "\\-",
					"name": "keyword.operator.arithmetic.terraform"
				},
				{
					"match": "\\*",
					"name": "keyword.operator.arithmetic.terraform"
				},
				{
					"match": "\\/",
					"name": "keyword.operator.arithmetic.terraform"
				},
				{
					"match": "\\%",
					"name": "keyword.operator.arithmetic.terraform"
				},
				{
					"match": "\\&\\&",
					"name": "keyword.operator.logical.terraform"
				},
				{
					"match": "\\|\\|",
					"name": "keyword.operator.logical.terraform"
				},
				{
					"match": "\\!",
					"name": "keyword.operator.logical.terraform"
				},
				{
					"match": "\\>",
					"name": "keyword.operator.terraform"
				},
				{
					"match": "\\<",
					"name": "keyword.operator.terraform"
				},
				{
					"match": "\\?",
					"name": "keyword.operator.terraform"
				},
				{
					"match": "\\.\\.\\.",
					"name": "keyword.operator.terraform"
				},
				{
					"match": "\\:",
					"scope": "keyword.operator.terraform"
				}
			]
		}
	}
}